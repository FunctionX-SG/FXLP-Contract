{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x28Ea9b0b6E7599e073fE09B22Be0b652d6996f7b",
      "txHash": "0xf2a0c1e42f4b9ec26978398babed94315e342c7f2641ebfcc777be68cc9e1938",
      "kind": "uups"
    },
    {
      "address": "0xdd7d25708b304a6510015bb1524Cc46141e8920F",
      "txHash": "0x77e3842e21ce86ab637674654d0b11945d1b39c5332d77c66bfd2b56e323a46b",
      "kind": "uups"
    },
    {
      "address": "0x1D52595B9182A8E65bfEdb4378E3E78c0C768a50",
      "txHash": "0x5354f8b773fbe59b9624eb855fd782e4164e377d228c398a509730c1d6d9d5ee",
      "kind": "uups"
    },
    {
      "address": "0xaDa343FCF66b46a0B365B1bEcCDd2B94c926eFee",
      "txHash": "0xbc3bb0b9458de1fb8dc4eb2cd0a3495c06312ccd3a234f94977ea631bf00916c",
      "kind": "uups"
    },
    {
      "address": "0x1854f0a389CA0139Bf5E442b745F9A4f9D7571e2",
      "txHash": "0x6075a3d68efcc8e4a637722da8296f6124182e8bed6b194231b48e33ff9b24ae",
      "kind": "uups"
    },
    {
      "address": "0x91f2A66A9C77ef397c5a24c9E5747f1eE0a555EB",
      "txHash": "0x56a242d56b28f19cf26af60df29b101b67086112b16442eddad348abdee95910",
      "kind": "uups"
    },
    {
      "address": "0x60d07660F6D7A5f679553fcD7edA54C4d0ddC387",
      "txHash": "0xd04719820bde9455a4a882f2cc08f761d8d9281baf891c8f39728e6d66485119",
      "kind": "uups"
    },
    {
      "address": "0x9C58851D180Dbc4607d22E338c78D90A09cB3a69",
      "txHash": "0x96eab49a1b06a9a9c68ca22290250e03e12f4ae583ba2ab4d9d96c0dd2e0548c",
      "kind": "uups"
    },
    {
      "address": "0xf5F6C4a4EB2c914BE3fFe9a3313877ddEb893765",
      "txHash": "0xbc808f79e4083e84cc5f6327707bc17dfb4800ec712daf1df9276b1c802b79c7",
      "kind": "uups"
    },
    {
      "address": "0xC4Fc6aC87D355fFd81B4CAE451Af774BcE0Ae20b",
      "txHash": "0xac4fc2c5a827d207442a2d007472e463e89be7069b10882a4137c76cfdd4db37",
      "kind": "uups"
    },
    {
      "address": "0x93BeBBC9b0317B004f27ae4b899448dc199E4bA5",
      "txHash": "0x52780482e74ba540732c6dea45b4504a79cdcd7dd6901d78451aeceae161a02a",
      "kind": "uups"
    },
    {
      "address": "0x4e1921C87b90eadE6cBbefE5c5E222d837079bA1",
      "txHash": "0x4ca111a2628693e671fafd5fd2eaabf9ef5b0ed72ca7fd2bb1834c97973f394d",
      "kind": "uups"
    },
    {
      "address": "0x6ACf252069249F51E22fd002D5c575307c76a600",
      "txHash": "0xeaa18e9fb35e4d0012c36a417f59b1f39fcf4194391ede4cb7a7ae70417fb60e",
      "kind": "uups"
    },
    {
      "address": "0x9B0566BE85457Aa42C5Bb0d2B92d5aA0e3126886",
      "txHash": "0x7366f3804380076210bae43abd07e3d5f77d6b2d1a6265f07e3805818454b0f1",
      "kind": "uups"
    },
    {
      "address": "0xC21632894FAdD79161fD46508849f03b44E1b2b9",
      "txHash": "0x0a7ca407ea75591ed1dd2c63c7ac69b3b4c73cde042b03339203f33ab5c58ea5",
      "kind": "uups"
    },
    {
      "address": "0xB4C67b77738E393C980D558D5370A8EeBb2Fd2D0",
      "txHash": "0x4ae7716eebf4f723922d1273c0b34e2e4ab7216bfcc13007d958ae77d905f754",
      "kind": "uups"
    },
    {
      "address": "0x4e7082eD58a5Ccb52f98781C3323e8e16592cFbf",
      "txHash": "0xf0d9028a0e1add1a67ffd15a9f3c1e80b52d4ba207980c07248426568cd0990f",
      "kind": "uups"
    },
    {
      "address": "0xf2b4f50dbBee6b54166dE5FB297768fD9286456d",
      "txHash": "0x24086e64b484aacb09349699701255c7b38457eba660c4048a0200bdd0c13f6f",
      "kind": "uups"
    },
    {
      "address": "0x66c2698443c072994DcC632483Bf9C69E1Ac61a6",
      "txHash": "0xbdee9e1ce2df96e60427bf6689bed9f0b1ed815d518dc8a125d93f7ba2ab9424",
      "kind": "uups"
    }
  ],
  "impls": {
    "c9219a98ca980247681f8b59bae82500fb9a5b365d3658c5599b864fd3818c75": {
      "address": "0x2D458893dF52B7365404D45370e8B17fA18eC9C8",
      "txHash": "0xe4716010c584d988acd0204a99d282384891e2f9a7d9f825926d6580d0602b7f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6672",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "FXDelegateVault",
            "src": "contracts/FXDelegateCmpoundStrategy.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "FXDelegateVault",
            "src": "contracts/FXDelegateCmpoundStrategy.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "FXDelegateVault",
            "src": "contracts/FXDelegateCmpoundStrategy.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6684",
            "contract": "FXDelegateVault",
            "src": "contracts/FXDelegateCmpoundStrategy.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "FXDelegateVault",
            "src": "contracts/FXDelegateCmpoundStrategy.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "FXDelegateVault",
            "src": "contracts/FXDelegateCmpoundStrategy.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "FXDelegateVault",
            "src": "contracts/FXDelegateCmpoundStrategy.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "FXDelegateVault",
            "src": "contracts/FXDelegateCmpoundStrategy.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "FXDelegateVault",
            "src": "contracts/FXDelegateCmpoundStrategy.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6672": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6684": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct FXDelegateVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct FXDelegateVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct FXDelegateVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4bf5f117b8f5144fffa93590dfe9d6cf70408b69274ba9d5d4d764217b7d782a": {
      "address": "0x6068dbe6A3C0542Bb0fF02bE43A9F31226053512",
      "txHash": "0xf8c3a6fc197a59fd735fa35c6ff95f2847a7078b48e6a1787e161242f619dac8",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)7816",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5338_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)7828",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5343_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)7816": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)7828": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5343_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5343_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5338_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ed2510b235e191b543d5876bdb7343637789cc7b9e0f799cff4238cbd1907e19": {
      "address": "0xD78a05DF6F24e1bC2131EA179870B61194ed5051",
      "txHash": "0x87622f3bd7972425be15b4031bf51bd3ac4a0c89e3e935b1891fa50ea447d2a9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6750",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6762",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6750": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6762": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8b87568fcf158c14cb060937ae3b87783a7d3c98c063fc13f17ba67fc2685155": {
      "address": "0x1A7E76846d989b6DAEF70326747C6524Ce0DE1Bc",
      "txHash": "0x53677a93f7bf13cef454154d1a38f82c0f41fa8bd07a6cdcacb695519cbc91f9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeFXVault",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IFXDelegateCmpoundStrategy)7816",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:18"
          },
          {
            "label": "fxFeesTreasury",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IFXDelegateCmpoundStrategy)7816",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:19"
          },
          {
            "label": "accountVestingSchedules",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(VestingSchedules)6765_storage)",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:34"
          },
          {
            "label": "accountEscrowedBalance",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:37"
          },
          {
            "label": "accountVestedBalance",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IFXDelegateCmpoundStrategy)7816": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(VestingSchedules)6765_storage)": {
            "label": "mapping(address => struct VestedFX.VestingSchedules)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingSchedule)6757_storage)": {
            "label": "mapping(uint256 => struct VestedFX.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)6757_storage": {
            "label": "struct VestedFX.VestingSchedule",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "vestedQuantity",
                "type": "t_uint128",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedules)6765_storage": {
            "label": "struct VestedFX.VestingSchedules",
            "members": [
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "data",
                "type": "t_mapping(t_uint256,t_struct(VestingSchedule)6757_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2e12a0d159fa39c0c3868f9c40b9b40d1b5ddbd98fec229d1d2e9bbc971231d8": {
      "address": "0x21E09F17499B4d5B6C13fED5B59386A67ffDc267",
      "txHash": "0xc54df1d32a47e32ae06873645da15777dab16b7f7ec7ef39dba37022c7ba68f3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IVestedFX)7828",
            "contract": "FXFeesTreasury",
            "src": "contracts/FXFeesTreasury.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IVestedFX)7828": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "11eb4fba0564fdf43ec413b7be11b49efc5368f6b51953a5dfe4ea3d37d21ad4": {
      "address": "0x22FD9A0bb88383E68b76334CAe3aD41DA6630316",
      "txHash": "0xea40115a88cf99ea4ae8945411b36bf6a123b793081697ad5ba4880bc16e4dc4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6748",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6792",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6748": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6792": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "90194e741963b53efcfda951a4823da8c1a90e28f8fe2adbf6beb6724c9cbd36": {
      "address": "0xA087193660d38926D35a18400A462Eb2Ab388515",
      "txHash": "0x63bc4af3e1b1bfdfc3ed788b7b497f5e67a7855114906396c51aa520d86abf8b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6743",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6794",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6743": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6794": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2a2f8df57c141c810c138c7657b1a2d0cec2be7680037de942abb9c1e8eb0f45": {
      "address": "0x90906a4985B1eF4d93f9A8D3491DD24b0AFA1DAD",
      "txHash": "0xfa1c69aca8f8de8d76c0b22cdec163e032086f44fd9ea99676eaf390ec36c983",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6761",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6773",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6761": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6773": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f1f03eed08c4beaae89ea5bf0927439be0dcd4219e7617ebb6c3e6f9f66bddae": {
      "address": "0x54650628bD0874920A2b35783958cad68ec9f9B0",
      "txHash": "0xb9c0ab352774d73c345ab9f30b07a2158710e4d1ee0735da98a6230b24af9c36",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6776",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6788",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6776": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6788": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "43b4cbf8990f22e311f7821ad77b42b72c671a261a6d2dda8ef4d0b91941ed3f": {
      "address": "0xae3772FB76C731b2ab273514A0390B98Cd5644F2",
      "txHash": "0x5cb7dcd8bdc44f1d1cc217903e266ddec9f08e1e593b07ad7b1f2c7bfdfaa032",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6781",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6793",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6781": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6793": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "01f54117e0f499a0f1374ad15941bcf155e78669f89a1eea401bc0dedf5215c5": {
      "address": "0x3286C07246b6aC8C0c308a0831309C2a33A9118a",
      "txHash": "0x1fcf69c7cdbf42760b100f36ed7b2300f2bddd812d256902e7e72208dcb6612b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6781",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6793",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6781": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6793": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d9176d360a23ac5a6cb3377d4e3860afebb0e6c6d947bc6059b24027c6f5f305": {
      "address": "0x6e540e5c83672A9903DE1a24c49518C2dea55f31",
      "txHash": "0x932d3e523869951ba899cbc6e6e1d80c3c7b1d802e50b7fb7fa5b06595caa0ee",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6784",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6796",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6784": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6796": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c24b034b2b148bb4fb5619e38be390478bf5c9a9089dbe3e075ef820f7d51d23": {
      "address": "0x8563665DFa74E969A219d81F20Da369a569489aE",
      "txHash": "0x344d1973eba7daf594e10aad9eda3ecdfd057c703197a20e41db89e3270977db",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6799",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6811",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6799": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6811": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b98f99328bbaa700bbe581a88927edf3fd4a8c0f908b7e399bc3b32220ec3c31": {
      "address": "0x9DFDD9c2f58BAD2d423Ee0835e0b80D0c9128D4A",
      "txHash": "0xa2f934e42a7ed6ee6e32b7d0099ffad6a2347ef2d2c176ef6c36a244ad60d037",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6789",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6801",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6789": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6801": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c4116e5f545c306d34ec599580dd19c67e324e2d0dd76a5e0793efd6bc6b8b35": {
      "address": "0x9Ee330FB3eB175b9051650c1Aad3d38Cd1434A48",
      "txHash": "0x68ff21ec56a9d3a34b3bdad7e10cc33537812ca693d7be9baa09b89a36f60fc4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6785",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6797",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6785": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6797": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2af5a4172ff06d9e2e23ab5251e01bfdb18c5bd1af568ef4def82d4b6633bd3c": {
      "address": "0xF85aCbA6FD18Bab585e5d57e9C713f41045843C1",
      "txHash": "0x0b49fd55e049fdaa4b0845a17938510d22cfd79f113fd483daaddc497a187a85",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6731",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6743",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6731": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6743": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2da3fdc2ab12af51856ad06d5e982e1e55de4202b0125f233bd8da4eaca4e751": {
      "address": "0x33faD08b6533c7944cA5722fd997f33F1FF4eB85",
      "txHash": "0xcb06bb059c831dda61464b0620632779d305f2855d9ac588301d69e8be89baa0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6755",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:14"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6767",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6755": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6767": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "45c0eb9e88518cbb95f56d9b7ef77dfa7dd491722cdcd80ee79528181c02caca": {
      "address": "0xD48735c208f8017Da467Ab63E7A054621a30E0A3",
      "txHash": "0xc717894a01f5f4f3a7133deec3f3e82de86bdeb7a851a0a89bd5f4215dd91d1a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6755",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6767",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6755": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6767": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "832649df41a6d199474ad2602b5544588e9d746167c0d26c74f2a6a052e73db3": {
      "address": "0x38855AF972ab02BECc7D4F4FFa8a78a71953CE30",
      "txHash": "0x3b427bd3c075f67554a52bb01da347dc856b13691b52bf0c84877ac3dbdf5fbd",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6775",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6787",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6775": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6787": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "76675dca396c1c20da10ef5343a02b6fc89f7ef3dabb4aac6ddcd9116c52cae5": {
      "address": "0xD42826BBb0D3b75D7A36ba35b5Be16A2f3Ec3687",
      "txHash": "0x118ec9bae95b569c7878ee237bdbad0e6314eb27c2b728d4fced4e0fe47c9216",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6798",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6810",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6798": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6810": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b8d603f82b5cd8a8e8d64ddff80e73b3f66c78675d9fee1fc466b68936b3c559": {
      "address": "0xEA1B80311d8Fd8Cd7e4cEfE5dF0cEcAB648bAfE7",
      "txHash": "0xbedc517301088c693bdcc37ca76822a710268d3a8acd83397d69296e6e7d10b1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6829",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6841",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6829": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6841": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "22678dc13e1450f7b44432ae635bcf9b425ee30290d3c2228edfeff2dfba61f0": {
      "address": "0x250A086b2cD0568ab4bd23Cb69bb5103cc60FcC3",
      "txHash": "0x7f47319888cbedff5bb5dd25a047b95baf0962a59bdd3f26987d6cc64c5147f5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6818",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6830",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6818": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6830": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "671b5042124c47b8c2cce73b3341c567335e20a52308c7c9c8a027cce0bd176e": {
      "address": "0x1A4Ac5e15D1e0428F47fFF6244431a65447d9118",
      "txHash": "0x97c119bb3b369b75685363381d4073a8f345d2771995a53b4be8416d4ae6ab31",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6798",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6810",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6798": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6810": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d7cd69a44a39a9bfdd1a921388d845f619df2b9db8d51a14e76154800de08409": {
      "address": "0x45944487ea1601b1085eA7959F76A5c25260c4FE",
      "txHash": "0xec197a2e8df2824682c49fc70edc7aa60e3948db786f141579a05f9b688eec0c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6798",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6810",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6798": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6810": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "01f824e7f95d390f6dd4aedfb935b30c1480a8078984d5b37406340c5807e670": {
      "address": "0x75eA646766B6E66CDF0fE16F978da93bc0fF1dD2",
      "txHash": "0x11ae72860c74027860e15429594db1cf2a793b555b4de7d7e6c72a85ec815f8d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6822",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6834",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6822": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6834": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4150b357987c30080414be9b36c29161493ce11c8790394e0ca59eb8b2649da4": {
      "address": "0x460227eF749ef338594D6EF694d9c3a58d3545D1",
      "txHash": "0xd0ec9aba8e3e3e4486215e21ab5f6d1179525b46130cba81c122ee8ed49dce67",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6806",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5041_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6818",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6806": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6818": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5046_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5046_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5041_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23e08919e5550fb96262aa448bd2fd93aca5f7dbeb42c18d3f2cd875be774a9d": {
      "address": "0x5430E5c912899E0e5B9ed42144d8Eb9273c229BF",
      "txHash": "0x190a91dc657b5eda04a5777846f2a7e5239a919036ea7c056bd16adf84cc3b58",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6826",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5043_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6838",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "testStorage",
            "offset": 0,
            "slot": "464",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6826": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6838": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5048_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5043_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2b78d13a072de5c106dc6e19aa7a44b972f61693265fcd6a7addfc499d215c55": {
      "address": "0x4a8e3fe8994820CFc971AD74ba970DE2a0ee8f19",
      "txHash": "0x50e107be373e80eb86a57fc189a450524b582ac128ec8a3ae98da8a5114bf2a6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6848",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5043_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6860",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "testStorage",
            "offset": 0,
            "slot": "464",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6848": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6860": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5048_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5043_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "66e987ed3db35476f10fc988336f951a86868c0d97e9abec73bcf3338d128fc9": {
      "address": "0xF8b9EdA18984A9e46E9DeDd386d58Bf722299D0B",
      "txHash": "0x2baea2aa5b3d467bfedc8fb186ee54506c111b8ab4aab923715fcbde2409a866",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6888",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5043_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6900",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "testStorage",
            "offset": 0,
            "slot": "464",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6888": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6900": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5048_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5043_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ea3201172cb20d2c7e95e8214ab1b5e47afc9a6538543b1696242d74beebfe99": {
      "address": "0x6318dA76e08d53ac751D5Ea531E29848745db24d",
      "txHash": "0x747c0934765ea4a7d04f03038eaf9416e4e7de9c14a10e078895a0902ff952b9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6872",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5043_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6884",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "testStorage",
            "offset": 0,
            "slot": "464",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6872": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6884": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5048_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5043_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "09b9e83695c47d4a7c33f06f5753f9ef20be23402e3fd95fab32598b94aa3637": {
      "address": "0x741E131B7bEeebe249b04129138900cFd864E976",
      "txHash": "0xd5aae76a2430ed7ff756b0767d19ac1f5e01a0d908948664559e35d5f9707408",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6869",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5043_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6881",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "testStorage",
            "offset": 0,
            "slot": "464",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6869": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6881": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5048_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5043_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "307882fdcd04820b654dee5da3f86bdf3015eee78fafaa05574ce8c11d13a96d": {
      "address": "0x08a715cA0c8B58bc80fAa2B6296b5A5672747bF9",
      "txHash": "0xa061338f98ac0d8dcac8b39431f2bbfd5f936d5650e79f41781fbb9235af6bbc",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6885",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5043_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6897",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "testStorage",
            "offset": 0,
            "slot": "464",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6885": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6897": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5048_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5043_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0e785587f8bad8612364b2fea4aeca9f9149d3155282088859b60fa416c3f38c": {
      "address": "0x017056F1bfe25531188C46D5a66980F4A9F35EF3",
      "txHash": "0x4a9d3e9d9b515b094aa9d541915a768b2ba464c81a435ab36eb613ca226fadb4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6880",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5043_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6892",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "testStorage",
            "offset": 0,
            "slot": "464",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6880": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6892": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5048_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5043_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "064a8741b34bf42fb481fe8efb1f23d217dc178be7ca81bcc1340e2cb46b8162": {
      "address": "0xfa9519Cf41D740c50f401890F82A4d24B9f805A8",
      "txHash": "0xb88092d8dda952fe7ee9804d3db08d3b437403ff301110058380d70029c59228",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6888",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5043_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6900",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "testStorage",
            "offset": 0,
            "slot": "464",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6888": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6900": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5048_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5043_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "435f8a18634b92c0f7f394193f6b403a5c0bd3c760c712012384acd915c4ae66": {
      "address": "0xe61Abfc4ABe4A800ae114dEB5C76E96c9E10ac2b",
      "txHash": "0x397fc32e040d321e320a6216fd9dd7deba09e770c2940b675da60cc6742c2380",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6885",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:26"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:27"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(VaultInfo)5043_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "458",
            "type": "t_contract(IVestedFX)6897",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "461",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "462",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "463",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "testStorage",
            "offset": 0,
            "slot": "464",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6885": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IVestedFX)6897": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5048_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5048_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5043_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4f1c77ec35250e52f521b84d598767b00c7580fcbf937f6733769498b4aa584a": {
      "address": "0xAF597d8351Ae659bE0ef76f4e789F837E62190b8",
      "txHash": "0x1aa9ba2aa162cbcfc79c0df004acf1c55639ac469c4b2a1a2ad38735e1ed8b88",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)6861",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:30"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "456",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:33"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:35"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "460",
            "type": "t_struct(VaultInfo)5045_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:38"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "464",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5050_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)6861": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5050_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5050_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5045_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6de12e26a3f3355a41c390bdd88a5e5c72892b80fe38a9ad32eaa31c41849d2c": {
      "address": "0x11e1A14e18d8a1023ea8375C484497D9f146c38E",
      "txHash": "0xb76578945bfd0cc75acad5119fe1dcd8d32e6b566905151ab6d6630bcc1520d2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)7148",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:30"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "feeTreasury",
            "offset": 0,
            "slot": "456",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:35"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:37"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "461",
            "type": "t_struct(VaultInfo)5047_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:39"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)7148": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5052_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5047_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "89942f4a73680d6a2b8d85ce06726609b23588245be5115104fb0b15fd47c26f": {
      "address": "0xEb9F19D0ACdf62fDc658cc88fcAF1F2104285184",
      "txHash": "0x137a55426cfa84e6334d1f76664543bf290d4e073cfe9936f43e9d653f8cc45e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)8218",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:30"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "feeTreasury",
            "offset": 0,
            "slot": "456",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:35"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:37"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "461",
            "type": "t_struct(VaultInfo)5179_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:39"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5184_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)8218": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5184_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5184_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5179_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "82b102af3d7daff723b4f3ed20b74f544dfff9f3359b8cdcb17f2b48c093787e": {
      "address": "0x609a6DcD7C564a8d4c34A4A94dBDAf05ce81A381",
      "txHash": "0x0a336ee47d2a536ff20a333b2cbc2fc2f39c9c2997ef85160e609d7d7bccd715",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeFXVault",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IFXDelegateCmpoundStrategy)8218",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:18"
          },
          {
            "label": "fxFeeTreasury",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IFXDelegateCmpoundStrategy)8218",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:19"
          },
          {
            "label": "accountVestingSchedules",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(VestingSchedules)6990_storage)",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:34"
          },
          {
            "label": "accountEscrowedBalance",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:37"
          },
          {
            "label": "accountVestedBalance",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IFXDelegateCmpoundStrategy)8218": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(VestingSchedules)6990_storage)": {
            "label": "mapping(address => struct VestedFX.VestingSchedules)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingSchedule)6982_storage)": {
            "label": "mapping(uint256 => struct VestedFX.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)6982_storage": {
            "label": "struct VestedFX.VestingSchedule",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "vestedQuantity",
                "type": "t_uint128",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedules)6990_storage": {
            "label": "struct VestedFX.VestingSchedules",
            "members": [
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "data",
                "type": "t_mapping(t_uint256,t_struct(VestingSchedule)6982_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0505c8f62f7feab51c49226d1f575dea505dbb91f9e32b501352a2f1082d032c": {
      "address": "0x07AE116E4D8Dcd166210146018180Fe2D13C6524",
      "txHash": "0x04ac5e0e30450a561e6fc455d570e8bd3dec267f6c5b9a8b9978ff33ff42e0c9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IVestedFX)8230",
            "contract": "feeTreasury",
            "src": "contracts/feeTreasury.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IVestedFX)8230": {
            "label": "contract IVestedFX",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4d8ae869566643d1d9574cdbd139670e5bf2623fdd4457826920ee080fdb67d3": {
      "address": "0x05C69008f13f3DD190CCBfa09227bD01E6Cef644",
      "txHash": "0x1c7da688310e558b5a2bd56c1dae23833ba82047be0d164a3f3246e556c8455b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)7140",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:30"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "feeTreasury",
            "offset": 0,
            "slot": "456",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:35"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:37"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "461",
            "type": "t_struct(VaultInfo)5047_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:39"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)7140": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5052_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5047_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f72235e6b5e983b60264a98d0cd9a5a03955b69ade1f4f788615353d6a73a802": {
      "address": "0x9b5547d62f5c90D3eef2f3DA0a79Ad05D041f586",
      "txHash": "0x0dd4668f48eb998f3ec5c94baab8f38b136d44b88c34b3fee3e7620e30252404",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)7140",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:30"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "feeTreasury",
            "offset": 0,
            "slot": "456",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:35"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:37"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "461",
            "type": "t_struct(VaultInfo)5047_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:39"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)7140": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5052_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5047_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8fa93c421d7d31604be87549cbc35e32d9b07915966e7a5751d5c02fac90c638": {
      "address": "0xa3E8caF7b9c80BA95FD1E52c06eC2855585F7d19",
      "txHash": "0xe4893f214019a503040fa688450a508ae93008c38ec64dbeac2c2bdf465fd9bf",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)7125",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:30"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "feeTreasury",
            "offset": 0,
            "slot": "456",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:35"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:37"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "461",
            "type": "t_struct(VaultInfo)5047_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:39"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)7125": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5052_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5047_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3a313ddf63b34f9f42b75a75c0753a7e385960ec7d18ffa52ef88f52d03238bd": {
      "address": "0x8cE49384C17a4f22219E01fA5de5371E79CC5269",
      "txHash": "0xbf9d7779786e39b705aea2f969cd28a5c47d1610115d7119d31b988b31c0ea30",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)7140",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:30"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "feeTreasury",
            "offset": 0,
            "slot": "456",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:35"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:37"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "461",
            "type": "t_struct(VaultInfo)5047_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:39"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)7140": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5052_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5047_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1cdc85b6f91959b103c866595e257b8717dded8bb52d24014c973527531e960e": {
      "address": "0xaBcBb7F5B6460De94c3032022811628DD9C31edb",
      "txHash": "0x5be1fda619f310fc82e5ea2ea8b360747f4cc1d089b7f6ab83152051fc36fbee",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)7140",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:30"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "feeTreasury",
            "offset": 0,
            "slot": "456",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:35"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:37"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "461",
            "type": "t_struct(VaultInfo)5047_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:39"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)7140": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5052_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5047_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "47abdc172f368ff7d2dab9f404dbd5d8cde20edbe2d33928ad6f4b5c395e3f90": {
      "address": "0xB8B666623B2edF718BC598C40370a2EdC126cCfe",
      "txHash": "0x76b2bc9ab8e2b1da20499cc0b56aa60d5c0192bdc414f306b602b51a387ad42a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)7136",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:30"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "feeTreasury",
            "offset": 0,
            "slot": "456",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:35"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:37"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "461",
            "type": "t_struct(VaultInfo)5047_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:39"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)7136": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5052_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5047_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b80d9725331b79253b1facf363cb2aa6268c0fe9e5b051acab5f52bdc27db9a3": {
      "address": "0x09Ed0A2291F95f110f89c7f206CFFF73d977C8d3",
      "txHash": "0xac093499aeb8700b9966e5f50aa81aeea9a097f061e941776b31157c422d4942",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2147",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)7130",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:30"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "feeTreasury",
            "offset": 0,
            "slot": "456",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:35"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:37"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "461",
            "type": "t_struct(VaultInfo)5047_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:39"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2147": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)7130": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5052_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5052_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5047_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c3911e17b617c6d35b57103368c5da63e8bd8c394bdb7009649cce40b72a035f": {
      "address": "0x2e61dFf47C35F9Fc193b88fbB1DA315406369737",
      "txHash": "0x024f103e327afd027dd46daacf1a00aea6d73d0ccb4e331eff80547186339e64",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeFXVault",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IFXDelegateCmpoundStrategy)2662",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:18"
          },
          {
            "label": "fxFeeTreasury",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IFXDelegateCmpoundStrategy)2662",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:19"
          },
          {
            "label": "accountVestingSchedules",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(VestingSchedules)1902_storage)",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:34"
          },
          {
            "label": "accountEscrowedBalance",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:37"
          },
          {
            "label": "accountVestedBalance",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VestedFX",
            "src": "contracts/VestedFX.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IFXDelegateCmpoundStrategy)2662": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(VestingSchedules)1902_storage)": {
            "label": "mapping(address => struct VestedFX.VestingSchedules)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VestingSchedule)1894_storage)": {
            "label": "mapping(uint256 => struct VestedFX.VestingSchedule)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)1894_storage": {
            "label": "struct VestedFX.VestingSchedule",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "vestedQuantity",
                "type": "t_uint128",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingSchedules)1902_storage": {
            "label": "struct VestedFX.VestingSchedules",
            "members": [
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "data",
                "type": "t_mapping(t_uint256,t_struct(VestingSchedule)1894_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3bd4865e07e6de1bc16f0392795d2fe4b1d809ba92b113becab948ff56201ed9": {
      "address": "0x7B9393AEc8Cc9C5340914Af1a4aD1374B2677032",
      "txHash": "0x8e03e76a4640ff3d2f8079ca04384692dbcc1f395484791e7425a00db83b4eff",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "355",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "401",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "402",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "451",
            "type": "t_contract(IFXDelegateCmpoundStrategy)8085",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:16"
          },
          {
            "label": "pendingFxReward",
            "offset": 0,
            "slot": "452",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:28"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "453",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:29"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "454",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:30"
          },
          {
            "label": "vestedFX",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:31"
          },
          {
            "label": "feeTreasury",
            "offset": 0,
            "slot": "456",
            "type": "t_address",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:32"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:34"
          },
          {
            "label": "CAP_STAKE_FX_TARGET",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:35"
          },
          {
            "label": "UNSTAKE_FX_TARGET",
            "offset": 0,
            "slot": "459",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:36"
          },
          {
            "label": "STAKE_FX_TARGET",
            "offset": 0,
            "slot": "460",
            "type": "t_uint256",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:37"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "461",
            "type": "t_struct(VaultInfo)5179_storage",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:39"
          },
          {
            "label": "valInfo",
            "offset": 0,
            "slot": "465",
            "type": "t_mapping(t_uint256,t_struct(ValInfo)5184_storage)",
            "contract": "StakeFXVault",
            "src": "contracts/StakeFXVault.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFXDelegateCmpoundStrategy)8085": {
            "label": "contract IFXDelegateCmpoundStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ValInfo)5184_storage)": {
            "label": "mapping(uint256 => struct StakeFXVault.ValInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ValInfo)5184_storage": {
            "label": "struct StakeFXVault.ValInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validator",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)5179_storage": {
            "label": "struct StakeFXVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
